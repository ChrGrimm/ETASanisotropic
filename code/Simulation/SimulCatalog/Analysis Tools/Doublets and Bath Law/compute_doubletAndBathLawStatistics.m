function [ doubletSampleSize, ...
           doubletPercentages, ...
           doubletType, ...
           bathLawMagnDiff, ...
           bathLawType ] = compute_doubletAndBathLawStatistics( Catalog, ...
                                                                 DoubletCriteria, ...
                                                                 timeWindow, ...
                                                                 spaceUnit, ...
                                                                 isSynthetic )
    
    %% Extract data
    % Extract columns from table Catalog and fields from struct DoubletCriteria
    % (to avoid repeated evaluations of table and struct in loop)
    % Magnitude vectors are rounded to one decimal
    [ xCoord, yCoord, t, mag, date, flag, ...
      eventID, triggerID, clusterID, ...
      timeWindow_days, spatialWindow, ...
      magnWindow, magnIntervals, nMagnitudes ] = extract_columnsAndFields4doubletAnalysis( Catalog, ...
                                                                                           DoubletCriteria, ...
                                                                                           isSynthetic );
    
    %% Define set of events to be evaluated
    idxEvents    = find( mag >= DoubletCriteria.minMagn & ... %???? NOT 5.9????
                         abs(flag) > 0.1 & ... % to include the by-hand sampled Tohoku
                         t >= 0 & ...
                         t <= timeWindow(end,2) - timeWindow_days );
    
    %% Initialize auxiliary and output matrices
    % For doublet evaluation
    doubletDegree   = zeros( length(idxEvents), 1 ); % length(magnWindow) );
    doubletType     = nan( length(idxEvents), 2 );
    shadowingEvents = cell( length(idxEvents), 1 );
    % For bath law evaluation
    bathLawMagnPairs= nan( length(idxEvents), 2 );
    bathLawType     = nan( length(idxEvents), 2 );
    
    %% Precomputations
    % Boolean marking events within time window AFTER event occurrence
    isInTime_forwardMatrix  = t'    >   t(idxEvents) & ...
                              t'    <=  t(idxEvents) + timeWindow_days;
    % Boolean marking events within time window BEFORE event occurrence                      
    isInTime_backwardMatrix = t'    <   t(idxEvents)  & ...
                              t'    >=  t(idxEvents) - timeWindow_days; % & ...
                              %mag'  >   mag(idxEvents);                     
    
    %% Evaluate doublets and Bath law magnitude differences
    % Initialize row counter
    iRow = 0;
    
    % Loop over all considered events
    for iEvent = idxEvents'
        
%         if iEvent==6171
%             test=-1;
%         end
        
        % Increment of row counter
        iRow = iRow + 1;
               
        idxInTime_backw = find(isInTime_backwardMatrix(iRow,:)');
        [ isInShadow, ...
          idxMainshock ] = check_ifMainshockBefore( Catalog, ...
                                                    iEvent, ...
                                                     idxInTime_backw, ...
                                                     xCoord, ...
                                                     yCoord, ...
                                                     spaceUnit, ...
                                                     spatialWindow, ...
                                                     mag, ...
                                                     'window' );
                                             
        if isInShadow
            
            doubletDegree(iRow)     = NaN;
            shadowingEvents{iRow}   = idxMainshock;
            continue;
            
        end
                                                      
        % Extract indices of events within time window
        idxInTime   = find( isInTime_forwardMatrix(iRow,:)' );
        % Apply space window
        isInSpace   = getDistance( xCoord(idxInTime), yCoord(idxInTime), ...
                                   xCoord(iEvent),    yCoord(iEvent),    spaceUnit ) ...
                      <= spatialWindow(iEvent); 
                    
        % If any event in time-space window, evaluate bath law and doublet
        if any(isInSpace) %&& ~isAftershock
            
            % Indices of events that are in time and space window
            idxTimeSpace = idxInTime(isInSpace);
            
            % Evaluate doublet degree and type(s)
            [ doubletDegree(iRow), ...
              doubletType(iRow,:), ...
              extraRowsDoubletType ] = evaluate_doubletDegreeAndType( idxTimeSpace, ...
                                                                      iEvent, ...
                                                                      mag, ...
                                                                      magnWindow, ...
                                                                      flag, ...
                                                                      triggerID, ...
                                                                      eventID, ...
                                                                      clusterID );

            doubletType = [ doubletType; extraRowsDoubletType ];
            
            % Evaluate Bath's law magnitude difference and event relations
            [ bathLawMagnPairs(iRow,:), ...
              bathLawType(iRow,:) ] = evaluate_bathLawInCatalog( idxTimeSpace, ...
                                                                 mag, ...
                                                                 iEvent, ...
                                                                 triggerID, ...
                                                                 eventID, ...
                                                                 clusterID );
            
        end
        
    end
    
%     analyzeShadowEvents
    
    %% Delete rows with NaN entries
    % events that were no doublet candidate (e.g. stronger mainshock ahead)
    isnanDoubletDegree                                  = isnan(doubletDegree(:,1));
    doubletDegree(isnanDoubletDegree , : )              = [];
    idxEvents( isnanDoubletDegree, : )                  = [];
    % for events that were no doublet
    doubletType( isnan(doubletType(:,1)), : )           = [];
    % for events that had no events within the time-space window
    bathLawMagnPairs( isnan(bathLawMagnPairs(:,1)), : ) = [];
    bathLawType( isnan(bathLawType(:,1)), : )           = [];
    
%     [ doubletDegree, ...
%       idxEvents, ...
%       doubletType, ...
%       bathLawType, ...
%       bathLawMagnPairs ] = remove_nanRows4doubletAnalysis( doubletDegree, ...
%                                                              idxEvents, ...
%                                                              doubletType, ...
%                                                              bathLawType, ...
%                                                              bathLawMagnPairs );

    %% Evaluate doublet percentages
    [ doubletPercentages, ...
      doubletSampleSize ] = compute_doubletPercentages( doubletDegree, ...
                                                         magnIntervals, ...
                                                         nMagnitudes, ...
                                                         idxEvents, ...
                                                         DoubletCriteria, ...
                                                         date, ...
                                                         mag, ...
                                                         isSynthetic );
    
    %% Group bath law data
    [ bathLawMagnDiff, ~, idx ]   = unique(bathLawMagnPairs, 'rows');
    bathLawMagnDiff(:,3)          = sum(unique(idx)==idx', 2);

end

