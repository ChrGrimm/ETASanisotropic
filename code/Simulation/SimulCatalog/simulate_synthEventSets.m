function SynthCatalog = simulate_synthEventSets( SynthCatalog, ...
                                                    InputsWPET, ...
                                                    BackgrDistr, ...
                                                    paramETAS, ...
                                                    ExperimentSettings, ...
                                                    SpaceSettings, ...
                                                    TargetSettings, ...
                                                    ModelFuncs, ...
                                                    modelType )
                                                    % MET_locations )

    %% Extract parameters
    Mc      = TargetSettings.Mc;
    polygon = TargetSettings.polygonXY;
   
    %% Simulation of background events (for synthetic catalogs only)
    if ExperimentSettings.isSampleBackground  
        SynthCatalog = sample_newEvents( SynthCatalog, ...
                                           BackgrDistr, ...
                                           ExperimentSettings, ...
                                           TargetSettings, ...
                                           SpaceSettings, ...
                                           -1, ...
                                           paramETAS, ...
                                           ModelFuncs, ...
                                           -1, ...
                                           'background' );
    end
    
    %% If Poissonian Model - return without triggering
    if strcmp(modelType, 'Poisson')
        return;
    end
    
    %% Simulation of triggered events
    idxTriggerEvents = 1:size(SynthCatalog,1);

    while ~isempty(idxTriggerEvents)
        % Sample number of aftershocks
        magTrigg        = SynthCatalog.mag(idxTriggerEvents);
        nAftershocks    = poissrnd( ModelFuncs.fProductivity_scaled(magTrigg,Mc) );
                                      
        % Stop loop, if no aftershocks are sampled                                            
        if sum(nAftershocks) == 0
            break;
        end
        
        TriggerSources  = repelem( SynthCatalog(idxTriggerEvents,{'periodID','id','t','x','y','mag','depth','typeKernel','rupExtent','strike','epiPos','clusterID','idxMainsh'}), ...
                                  nAftershocks, 1 );
        
        % Sample aftershock information and add to event set
        [ SynthCatalog, ...
          idxTriggerEvents ] = sample_newEvents( SynthCatalog, ...
                                                 -1, ...
                                                 ExperimentSettings, ...
                                                 TargetSettings, ...
                                                 SpaceSettings, ...
                                                 TriggerSources, ...
                                                 paramETAS, ...
                                                 ModelFuncs, ...
                                                 InputsWPET, ...
                                                 'triggered' );
                                                   
        %% Stop simulation if a sampled event exceeds the chosen target
%         if ~isempty(ExperimentSettings.stopSimul_ifExceedsMw) && any(SynthCatalog.flag == 1 & SynthCatalog.mag >= ExperimentSettings.stopSimul_ifExceedsMw)
% %             disp(['Stop because sampled magnitude >= ', num2str(ExperimentSettings.stopSimul_ifExceedsMw)])
%             break
%         end
        
    end
    
    %% Compute time difference and distance to rupture
    [ SynthCatalog.tDaysDiff, ...
      SynthCatalog.distKm ] = evaluate_timeSpaceDist2mainshock( SynthCatalog );
    
    % Sort rows of table and recompute mainshock index
    idxMainshock                            = SynthCatalog.idxMainsh;
    [SynthCatalog,idxSorted]                = sortrows(SynthCatalog, {'periodID','t'}, 'ascend');
    [~,idxSortedSorted]                     = sort(idxSorted);
    SynthCatalog.idxMainsh(idxSortedSorted) = idxSortedSorted(idxMainshock);
    
%     if isa(SimulSettings.M_c_t,'function_handle')
%         
%         isVisible = apply_shortTermIncomplFct( SynthCatalog, ...
%                                                6.4, ...
%                                                SimulSettings.M_c_t, ...
%                                                SimulSettings.Mc );
%         SynthCatalog.flag(~isVisible) = -1;
%         
%     else
%         
%         idxTargetTime = find( SynthCatalog.flag >= 0 );
%         isDetected    = true(size(SynthCatalog, 1), 1);
%         
%         for iEv = idxTargetTime'
%             isDetected(iEv) = SynthCatalog.mag(iEv) >= 5 ...
%                                 | ~any( (SynthCatalog.t < SynthCatalog.t(iEv) ...
%                                 & SynthCatalog.t > SynthCatalog.t(iEv) - paramETAS(9) ...
%                                 & SynthCatalog.mag > SynthCatalog.mag(iEv) ) );
%         end
%         
%         SynthCatalog = SynthCatalog(isDetected, :);
%                         
% %         % Delete events that are outside of complementary area
% %         complRangeX             = [min(polygon(:,1))-1, max(polygon(:,1))+1];
% %         complRangeY             = [min(polygon(:,2))-1, max(polygon(:,2))+1];
% %         polygon                 = [ complRangeX(1), complRangeY(1); complRangeX(2), complRangeY(1); ...
% %                                     complRangeX(2), complRangeY(2); complRangeX(1), complRangeY(2) ];
% %         isInPoly                = inpolygon(SynthCatalog.x, SynthCatalog.y, polygon(:,1), polygon(:,2));
% %         SynthCatalog( ~isInPoly, : ) = [];
% % 
% %         % Apply short term incompleteness
% %         [ ~, isDetected ] = apply_shortTermIncompl2timeWindow( SynthCatalog, ...
% %                                                                 SimulSettings.timeWindow_days, ...
% %                                                                 Mc, ...
% %                                                                 GeneralSettings.staiFromMw );
% %         SynthCatalog.flag( ~isDetected ) = -1;
%     end
    
end
