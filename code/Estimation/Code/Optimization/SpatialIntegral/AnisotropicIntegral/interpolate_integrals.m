function [ integralVal, ...
           gradiant_D, ...
           gradiant_q ] = interpolate_integrals( sample_integral, ...
                                                  sample_gradiant_D, ...
                                                  sample_gradiant_q, ...
                                                  distGrid_integral, ...
                                                  distGrid_gradiants, ...
                                                  inclGradiants, ...
                                                  r, ...
                                                  r0, ...
                                                  segmFactor, ...
                                                  isStartP, ...
                                                  isEndP )
                                              
    %% Spatial cdf
    % anisotropic
    tmp_r       = interp1(distGrid_integral, sample_integral, r);
    tmp_r0      = interp1(distGrid_integral, sample_integral, r0);
    integralVal = compute_integrPerEvent( segmFactor, ...
                                          isStartP, ...
                                          isEndP, ...
                                          tmp_r, ...
                                          tmp_r0 );
    
    %% Derivatives of spatial integral by D and q
    if inclGradiants       
        % Derivative by D
        tmp_r       = interp1(distGrid_gradiants, sample_gradiant_D, r);
        tmp_r0      = interp1(distGrid_gradiants, sample_gradiant_D, r0);
        gradiant_D  = compute_integrPerEvent( segmFactor, ...
                                              isStartP, ...
                                              isEndP, ...
                                              tmp_r, ...
                                              tmp_r0 );
        % Derivative by q
        tmp_r       = interp1(distGrid_gradiants, sample_gradiant_q, r);
        tmp_r0      = interp1(distGrid_gradiants, sample_gradiant_q, r0);
        gradiant_q  = compute_integrPerEvent( segmFactor, ...
                                              isStartP, ...
                                              isEndP, ...
                                              tmp_r, ...
                                              tmp_r0 );
    else
        gradiant_D  = 0;
        gradiant_q  = 0;
    end
    
    %% Checks
    if isnan(integralVal) || isnan(gradiant_D) || isnan(gradiant_q)
        error('Spatial estimates may not be NaN!')
    end                                          
                                              
end