function [ estimate_F, ...
           estimate_dF_D, ...
           estimate_dF_q ] = interpolate_anisoIntegral( sample_F, ...
                                                          sample_dF_D, ...
                                                          sample_dF_q, ...
                                                          gridR_F, ...
                                                          gridR_dF, ...
                                                          inclGradiants, ...
                                                          r_iso, ...
                                                          r0_iso, ...
                                                          segmFactor_iso, ...
                                                          isStartP_iso, ...
                                                          isEndP_iso, ...
                                                          r_aniso, ...
                                                          r0_aniso, ...
                                                          segmFactor_aniso, ...
                                                          isStartP_aniso, ...
                                                          isEndP_aniso )
                                                      
    %% CAN BE DELETED - NOT IN USE

    %% Spatial cdf
    % anisotropic
    tmp_r               = interp1(gridR_F, sample_F(:,1), r_aniso);
    tmp_r0              = interp1(gridR_F, sample_F(:,1), r0_aniso);
    integrEstim_aniso   = compute_integrPerEvent( segmFactor_aniso, ...
                                                  isStartP_aniso, ...
                                                  isEndP_aniso, ...
                                                  tmp_r, ...
                                                  tmp_r0 );
                                              
    % isotropic
    tmp_r           = interp1(gridR_F, sample_F(:,2), r_iso);
    tmp_r0          = interp1(gridR_F, sample_F(:,2), r0_iso);
    integrEstim_iso = compute_integrPerEvent( segmFactor_iso, ...
                                              isStartP_iso, ...
                                              isEndP_iso, ...
                                              tmp_r, ...
                                              tmp_r0 );

    % Sum up
    estimate_F     = integrEstim_iso + integrEstim_aniso;
    
    %% Derivatives of spatial integral by D and q
    if inclGradiants
        
        %% Derivative by D
        % anisotropic
        tmp_r               = interp1(gridR_dF, sample_dF_D(:,1), r_aniso);
        tmp_r0              = interp1(gridR_dF, sample_dF_D(:,1), r0_aniso);
        integrEstim_aniso   = compute_integrPerEvent( segmFactor_aniso, ...
                                                      isStartP_aniso, ...
                                                      isEndP_aniso, ...
                                                      tmp_r, ...
                                                      tmp_r0 );

        % isotropic
        tmp_r           = interp1(gridR_dF, sample_dF_D(:,2), r_iso);
        tmp_r0          = interp1(gridR_dF, sample_dF_D(:,2), r0_iso);
        integrEstim_iso = compute_integrPerEvent( segmFactor_iso, ...
                                                  isStartP_iso, ...
                                                  isEndP_iso, ...
                                                  tmp_r, ...
                                                  tmp_r0 );

        % Sum up
        estimate_dF_D   = integrEstim_iso + integrEstim_aniso;
        
        %% Derivative by q
        % anisotropic
        tmp_r               = interp1(gridR_dF, sample_dF_q(:,1), r_aniso);
        tmp_r0              = interp1(gridR_dF, sample_dF_q(:,1), r0_aniso);
        integrEstim_aniso   = compute_integrPerEvent( segmFactor_aniso, ...
                                                      isStartP_aniso, ...
                                                      isEndP_aniso, ...
                                                      tmp_r, ...
                                                      tmp_r0 );

        % isotropic
        tmp_r           = interp1(gridR_dF, sample_dF_q(:,2), r_iso);
        tmp_r0          = interp1(gridR_dF, sample_dF_q(:,2), r0_iso);
        integrEstim_iso = compute_integrPerEvent( segmFactor_iso, ...
                                                  isStartP_iso, ...
                                                  isEndP_iso, ...
                                                  tmp_r, ...
                                                  tmp_r0 );

        % Sum up
        estimate_dF_q   = integrEstim_iso + integrEstim_aniso;
       
    else
        
        estimate_dF_D = 0;
        estimate_dF_q = 0;
        
    end
    
    %% Checks
    if isnan(estimate_F) || isnan(estimate_dF_D) || isnan(estimate_dF_q)
        error('Spatial estimates may not be NaN!')
    end

end