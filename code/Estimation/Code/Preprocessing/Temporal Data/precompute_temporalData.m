function TempData = precompute_temporalData( Catalog, ...
                                            Inputs, ...
                                            ModelFuncs, ...
                                            SpatData )

    if strcmp( Inputs.ModelSettings.modelType, 'ETAS-Incomplete' )   
        %% Settings 
        % These may be edited to increase accuracy or speed up the code. The default settings have been
        % tested on several data examples and should be a fair trade-off
        
        % Time grid resolution immediately after an earthquake occurred. Due to the steep Omori law,
        % higher resolution is needed to accurately approximate the temporal integral
        min_tStep_sec = 30; % larger value speeds up, but minders accuracy (strong effect)
        
        % Maximum time grid resolution in seismically quite times
        max_tStep_min = 720; % larger value speeds up, but minders accuracy (slight effect)
        
        % Factor (without unit) that stears the time window of past events that are accounted for the 
        % ETAS event rate at a given time
        cRecentEvents = 1; % larger value speeds up, but minders accuracy (strong effect)
        
        %% Initializations
        % Start and end point of time window
        timeWindow_start    = Inputs.TargetSettings.tWindow_days(1); 
        timeWindow_end      = Inputs.TargetSettings.tWindow_days(end); 

        %% Define fix dates
        % Event times within target time window, excluding duplicated events
        tEvents         = Catalog.t;
        isTarget        = Catalog.flag >= 0 & ~Catalog.isDupl;
        % 
        tEpsilon        = 10^-10;
        tFixGrid        = sort([timeWindow_start; tEvents(isTarget); tEvents(isTarget)-tEpsilon; timeWindow_end])';  
        if tFixGrid(2)==tFixGrid(3)
            tFixGrid(1:2) = [];
        end
        if tFixGrid(end-1)==tFixGrid(end)
            tFixGrid(end-1:end) = [];
        end

        %% Determine inter-event time grid
        c                   = 0.05; % Inputs.ModelSettings.iniParamETAS(4);
        p                   = 1.05; % Inputs.ModelSettings.iniParamETAS(5);
        timeGrid_interEvent = predefine_interEventTimeGrid( min_tStep_sec, ...
                                                            max_tStep_min, ...
                                                            max(diff(tFixGrid)), ...
                                                            c, p);

        %% Evaluate 
        % Loop over all inter-event time intervals
        threshLargeMag = 5;
        [ idxRecentEvents, ...
           idxTimeGrid, ...
           timeGrid, ...
           timeSpan4recentEvents, ...
           isZeroSpatialGradient, ...
           idxRecentEvents_spatGrad, ...
           idxTimeGrid_spatGrad ] = compute_temporalData( tFixGrid, ...
                                                          cRecentEvents, ...
                                                          threshLargeMag, ...
                                                            c, p, ...
                                                            tEvents, ...
                                                            Catalog.mag, ...
                                                            Catalog.typeKernel, ...
                                                            timeGrid_interEvent, ...
                                                            Inputs.TimeSettings.restr_days );

        timeDiff = timeGrid( idxTimeGrid ) - tEvents( idxRecentEvents ); 

        TempData = struct( 'idxRecentEvents', idxRecentEvents, 'idxTimeGrid', idxTimeGrid, ...
                           'timeGrid', timeGrid, 'timeSpan4recentEvents', timeSpan4recentEvents, ...
                           'timeDiff', timeDiff, 'tFixGrid', tFixGrid, 'thresh4largeMag', threshLargeMag, ...
                           'idxRecentEvents_spatGrad', idxRecentEvents_spatGrad, 'idxTimeGrid_spatGrad', idxTimeGrid_spatGrad, ...
                           'isZeroSpatialGradient', isZeroSpatialGradient );

        disp(['Dimension of TempData.idxEvents = ', num2str(length(TempData.idxRecentEvents)/10^6), ' Mio'])

        %% Check if approximation is sufficiently good
        check_tempData( Catalog, ...
                         Inputs, ...
                         ModelFuncs, ...
                         SpatData, ...
                         TempData, ...
                         sqrt(Inputs.ModelSettings.iniParamETAS) )
    
    else
        TempData            = 'dummy';
        
    end

end
